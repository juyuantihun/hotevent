---
description: 
globs: 
alwaysApply: true
---
# 数据库结构指南

## 概述
TimeFlow 系统的数据库采用 MySQL 关系型数据库，包含多个相互关联的表，用于存储事件、评论、用户权限等核心业务数据。

## 核心表结构

### 1. 事件相关表
#### event（事件表）
- 存储事件的基本信息
- 包含事件标题、内容、时间、状态等字段
- 关联事件类型、影响等级、影响类型等

#### event_relation（事件关系表）
- 记录事件之间的影响关系
- 包含源事件、目标事件、影响类型、影响等级等
- 支持多维度的事件关联

#### event_similarity（事件相似度表）
- 记录事件之间的相似度信息
- 用于相似事件推荐和关联分析

#### event_source（事件来源表）
- 记录事件的来源信息
- 包含来源名称、描述等字段

#### event_type（事件类型表）
- 定义事件的类型分类
- 包含类型编码、名称、描述等

### 2. 影响评估相关表
#### impact_level（影响等级表）
- 定义事件影响的等级
- 包含等级编码、名称、描述等
- 用于评估事件影响程度

#### impact_type（影响类型表）
- 定义事件影响的类型
- 包含类型编码、名称、描述等
- 用于分类事件影响方式

### 3. 评论相关表
#### commentator（评论员表）
- 存储评论员的基本信息
- 包含姓名、联系方式、状态等

#### commentator_score（评论员评分表）
- 记录评论员的评分信息
- 包含评分时间、分数、评价等

### 4. 用户权限相关表
#### user（用户表）
- 存储系统用户信息
- 包含用户名、密码、状态等

#### role（角色表）
- 定义系统角色
- 包含角色名称、描述等

#### permission（权限表）
- 定义系统权限项
- 包含权限编码、名称、描述等

#### user_role（用户角色关联表）
- 记录用户与角色的关联关系
- 实现用户-角色多对多关系

#### role_permission（角色权限关联表）
- 记录角色与权限的关联关系
- 实现角色-权限多对多关系

### 5. 配置相关表
#### lifecycle_config（生命周期配置表）
- 存储系统生命周期相关配置
- 包含配置项、值、描述等

## 表关系说明

### 事件关系
- event 与 event_type：多对一关系
- event 与 impact_level：多对一关系
- event 与 impact_type：多对一关系
- event 与 event_source：多对一关系
- event 与 event_relation：一对多关系（作为源事件或目标事件）

### 用户权限关系
- user 与 role：多对多关系（通过 user_role 表关联）
- role 与 permission：多对多关系（通过 role_permission 表关联）

### 评论关系
- commentator 与 commentator_score：一对多关系

## 重要字段说明

### 通用字段
- id：主键，自增长
- created_at：创建时间
- updated_at：更新时间
- created_by：创建人
- updated_by：更新人
- status：状态（0-禁用，1-启用）

### 业务字段
- code：编码，用于唯一标识
- name：名称
- description：描述
- type：类型
- level：等级
- score：分数
- time：时间

## 索引设计
- 主键索引：所有表的 id 字段
- 唯一索引：code 字段
- 普通索引：status、type、level 等常用查询字段
- 联合索引：根据业务查询需求设计

## 注意事项
1. 所有表都包含基础字段（id、created_at、updated_at等）
2. 状态字段统一使用 0/1 表示禁用/启用
3. 编码字段要求唯一性
4. 时间字段使用 datetime 类型
5. 关联字段使用外键约束
6. 重要字段添加非空约束
7. 适当使用默认值
8. 注意字段长度和类型的合理设置

## 数据维护建议
1. 定期备份数据库
2. 监控表空间使用情况
3. 定期优化索引
4. 及时清理历史数据
5. 保持数据一致性
6. 记录重要数据变更
7. 控制事务大小
8. 合理使用存储过程

